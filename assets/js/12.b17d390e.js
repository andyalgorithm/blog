(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{362:function(a,t,s){a.exports=s.p+"assets/img/tool-git-learn-1.b5b39161.png"},363:function(a,t,s){a.exports=s.p+"assets/img/git-four-areas.6fc2a8d8.png"},364:function(a,t,s){a.exports=s.p+"assets/img/git-five-states.403e8cda.png"},448:function(a,t,s){"use strict";s.r(t);var e=s(14),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"工具详解-git-详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工具详解-git-详解"}},[a._v("#")]),a._v(" 工具详解 - Git 详解")]),a._v(" "),t("blockquote",[t("p",[a._v("Git是分布式代码托管的标杆，这里将提供如何学习Git，以及Git工作流的总结，和常用的操作命令。 @pdai")])]),a._v(" "),t("ul",[t("li",[a._v("工具详解 - Git 详解\n"),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%BF%85%E8%AF%BB"}},[a._v("必读")])]),a._v(" "),t("li",[a._v("常用小结\n"),t("ul",[t("li",[a._v("Git操作流程\n"),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E5%92%8C%E5%90%8C%E6%AD%A5%E4%BB%A3%E7%A0%81"}},[a._v("代码提交和同步代码")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E4%BB%A3%E7%A0%81%E6%92%A4%E9%94%80%E5%92%8C%E6%92%A4%E9%94%80%E5%90%8C%E6%AD%A5"}},[a._v("代码撤销和撤销同步")])])])]),a._v(" "),t("li",[t("a",{attrs:{href:"#git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4---%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E5%92%8C%E5%90%8C%E6%AD%A5%E4%BB%A3%E7%A0%81"}},[a._v("Git常用操作命令 - 代码提交和同步代码")])]),a._v(" "),t("li",[a._v("Git常用操作命令 - 代码撤销和撤销同步\n"),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%B7%B2%E4%BF%AE%E6%94%B9%E4%BD%86%E6%9C%AA%E6%9A%82%E5%AD%98"}},[a._v("已修改，但未暂存")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E5%B7%B2%E6%9A%82%E5%AD%98%E6%9C%AA%E6%8F%90%E4%BA%A4"}},[a._v("已暂存，未提交")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E5%B7%B2%E6%8F%90%E4%BA%A4%E6%9C%AA%E6%8E%A8%E9%80%81"}},[a._v("已提交，未推送")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E5%B7%B2%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B"}},[a._v("已推送到远程")])])])]),a._v(" "),t("li",[a._v("Git常用操作命令 - 其它常用命令\n"),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%85%B3%E8%81%94%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93"}},[a._v("关联远程仓库")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E5%88%87%E6%8D%A2%E5%88%86%E6%94%AF"}},[a._v("切换分支")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E6%92%A4%E9%94%80%E6%93%8D%E4%BD%9C"}},[a._v("撤销操作")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80%E4%B8%8E%E5%89%8D%E8%BF%9B"}},[a._v("版本回退与前进")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84git"}},[a._v("配置属于你的Git")])])])])])]),a._v(" "),t("li",[t("a",{attrs:{href:"#gitignore"}},[a._v("gitignore")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E4%BD%BF%E7%94%A8gource%E7%94%9F%E6%88%90%E7%89%88%E6%9C%AC%E8%AE%B0%E5%BD%95%E8%A7%86%E9%A2%91"}},[a._v("使用Gource生成版本记录视频")])])])])]),a._v(" "),t("h2",{attrs:{id:"必读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#必读"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E5%BF%85%E8%AF%BB"}},[a._v("#")]),a._v(" 必读")]),a._v(" "),t("blockquote",[t("p",[a._v("如果要问一本就可以学习Git的书或者文章，毫无疑问我会推荐Git Pro2，绝对是良心之作啊")])]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("Git Pro 2")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/progit/progit2",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git Pro2英文Github仓库在新窗口打开"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://bingohuang.gitbooks.io/progit2/content/01-introduction/sections/about-version-control.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git Pro2中文Gitbook在新窗口打开"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/bingohuang/progit2-gitbook",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git Pro2对应的中文Markdown版本的仓库地址在新窗口打开"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"http://git.oschina.net/progit/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git Pro中文阅读在新窗口打开"),t("OutboundLink")],1)])])]),a._v(" "),t("li",[t("strong",[a._v("其它资料")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://imtuzi.com/post/most-used-git-cmd.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("99%的时间在使用的Git命令在新窗口打开"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.jianshu.com/p/cbd8cf5e232d",target:"_blank",rel:"noopener noreferrer"}},[a._v("GIT分支开发模型规范在新窗口打开"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"http://rogerdudler.github.io/git-guide/index.zh.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git - 简明指南在新窗口打开"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"http://marklodato.github.io/visual-git-guide/index-zh-cn.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("图解 Git在新窗口打开"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000",target:"_blank",rel:"noopener noreferrer"}},[a._v("廖雪峰 : Git 教程在新窗口打开"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://learngitbranching.js.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Learn Git Branching在新窗口打开"),t("OutboundLink")],1)])])]),a._v(" "),t("li",[t("strong",[a._v("在线学习")]),a._v(" "),t("ul",[t("li",[a._v("有个很好的在线学习网站，推荐给大家： "),t("a",{attrs:{href:"https://learngitbranching.js.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://learngitbranching.js.org/在新窗口打开"),t("OutboundLink")],1),t("img",{attrs:{src:s(362),alt:"img"}})])])])]),a._v(" "),t("h2",{attrs:{id:"常用小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用小结"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E5%B8%B8%E7%94%A8%E5%B0%8F%E7%BB%93"}},[a._v("#")]),a._v(" 常用小结")]),a._v(" "),t("blockquote",[t("p",[a._v("读完Git Pro2, 大部分功能适合在使用的时候作为工具来参考，最需要理解的是常用的命令对应的workflow，以及分支管理和合并操作。")])]),a._v(" "),t("h3",{attrs:{id:"git操作流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git操作流程"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#git%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B"}},[a._v("#")]),a._v(" Git操作流程")]),a._v(" "),t("h4",{attrs:{id:"代码提交和同步代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码提交和同步代码"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E5%92%8C%E5%90%8C%E6%AD%A5%E4%BB%A3%E7%A0%81"}},[a._v("#")]),a._v(" 代码提交和同步代码")]),a._v(" "),t("p",[t("img",{attrs:{src:s(363),alt:"img"}})]),a._v(" "),t("h4",{attrs:{id:"代码撤销和撤销同步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码撤销和撤销同步"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E4%BB%A3%E7%A0%81%E6%92%A4%E9%94%80%E5%92%8C%E6%92%A4%E9%94%80%E5%90%8C%E6%AD%A5"}},[a._v("#")]),a._v(" 代码撤销和撤销同步")]),a._v(" "),t("p",[t("img",{attrs:{src:s(364),alt:"img"}})]),a._v(" "),t("h3",{attrs:{id:"git常用操作命令-代码提交和同步代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git常用操作命令-代码提交和同步代码"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4-%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E5%92%8C%E5%90%8C%E6%AD%A5%E4%BB%A3%E7%A0%81"}},[a._v("#")]),a._v(" Git常用操作命令 - 代码提交和同步代码")]),a._v(" "),t("ul",[t("li",[a._v("第零步: 工作区与仓库保持一致")]),a._v(" "),t("li",[a._v("第一步: 文件增删改，变为已修改状态")]),a._v(" "),t("li",[a._v("第二步: git add ，变为已暂存状态")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" status\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--all")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前项目下的所有更改")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前目录下的所有更改")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" xx/xx.py xx/xx2.py  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 添加某几个文件")]),a._v("\n")])])]),t("ul",[t("li",[a._v("第三步: git commit，变为已提交状态")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit -m"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<这里写commit的描述>"')]),a._v("\n")])])]),t("ul",[t("li",[a._v("第四步: git push，变为已推送状态")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" origin master "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 第一次需要关联上")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 之后再推送就不用指明应该推送的远程分支了")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可以查看本地仓库的分支")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可以查看本地仓库和本地远程仓库(远程仓库的本地镜像)的所有分支")]),a._v("\n")])])]),t("blockquote",[t("p",[a._v("在某个分支下，我最常用的操作如下")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" status\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" status\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'xxx'")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rebase")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin xxbranch\n")])])]),t("h3",{attrs:{id:"git常用操作命令-代码撤销和撤销同步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git常用操作命令-代码撤销和撤销同步"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4-%E4%BB%A3%E7%A0%81%E6%92%A4%E9%94%80%E5%92%8C%E6%92%A4%E9%94%80%E5%90%8C%E6%AD%A5"}},[a._v("#")]),a._v(" Git常用操作命令 - 代码撤销和撤销同步")]),a._v(" "),t("h4",{attrs:{id:"已修改-但未暂存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#已修改-但未暂存"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E5%B7%B2%E4%BF%AE%E6%94%B9-%E4%BD%86%E6%9C%AA%E6%9A%82%E5%AD%98"}},[a._v("#")]),a._v(" 已修改，但未暂存")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出所有的修改")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" xx/xx.py xx/xx2.py "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出某(几)个文件的修改")]),a._v("\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 撤销项目下所有的修改")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 撤销当前文件夹下所有的修改")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout xx/xx.py xx/xx2.py "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 撤销某几个文件的修改")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# untracked状态，撤销新增的文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-df")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# untracked状态，撤销新增的文件和文件夹")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Untracked files:")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#  (use "git add <file>..." to include in what will be committed)')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#\txxx.py")]),a._v("\n")])])]),t("h4",{attrs:{id:"已暂存-未提交"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#已暂存-未提交"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E5%B7%B2%E6%9A%82%E5%AD%98-%E6%9C%AA%E6%8F%90%E4%BA%A4"}},[a._v("#")]),a._v(" 已暂存，未提交")]),a._v(" "),t("blockquote",[t("p",[a._v("这个时候已经执行过git add，但未执行git commit，但是用git diff已经看不到任何修改。 因为git diff检查的是工作区与暂存区之间的差异。")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cached")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这个命令显示暂存区和本地仓库的差异")]),a._v("\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 暂存区的修改恢复到工作区")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--soft")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 与git reset等价，回到已修改状态，修改的内容仍然在工作区中")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 回到未修改状态，清空暂存区和工作区")]),a._v("\n")])])]),t("blockquote",[t("p",[a._v("git reset --hard 操作等价于 git reset 和 git checkout 2步操作")])]),a._v(" "),t("h4",{attrs:{id:"已提交-未推送"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#已提交-未推送"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E5%B7%B2%E6%8F%90%E4%BA%A4-%E6%9C%AA%E6%8E%A8%E9%80%81"}},[a._v("#")]),a._v(" 已提交，未推送")]),a._v(" "),t("blockquote",[t("p",[a._v("执行完commit之后，会在仓库中生成一个版本号(hash值)，标志这次提交。之后任何时候，都可以借助这个hash值回退到这次提交。")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("1")]),a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 比较2个分支之间的差异")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" master origin/master "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看本地仓库与本地远程仓库的差异")]),a._v("\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v(" origin/master "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 回退与本地远程仓库一致")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v(" HEAD^ "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 回退到本地仓库上一个版本")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("hash code"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 回退到任意版本")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset --soft/git reset "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 回退且回到已修改状态，修改仍保留在工作区中。")]),a._v("\n")])])]),t("h4",{attrs:{id:"已推送到远程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#已推送到远程"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E5%B7%B2%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B"}},[a._v("#")]),a._v(" 已推送到远程")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("$ git push "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("f orgin master # 强制覆盖远程分支\n$ git push "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("f # 如果之前已经用 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("u 关联过，则可省略分支名\n")])])]),t("blockquote",[t("p",[a._v("慎用，一般情况下，本地分支比远程要新，所以可以直接推送到远程，但有时推送到远程后发现有问题，进行了版本回退，旧版本或者分叉版本推送到远程，需要添加 -f参数，表示强制覆盖。")])]),a._v(" "),t("h3",{attrs:{id:"git常用操作命令-其它常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git常用操作命令-其它常用命令"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4-%E5%85%B6%E5%AE%83%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4"}},[a._v("#")]),a._v(" Git常用操作命令 - 其它常用命令")]),a._v(" "),t("h4",{attrs:{id:"关联远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关联远程仓库"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E5%85%B3%E8%81%94%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93"}},[a._v("#")]),a._v(" 关联远程仓库")]),a._v(" "),t("ul",[t("li",[a._v("如果还没有Git仓库，你需要")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" init\n")])])]),t("ul",[t("li",[a._v("如果你想关联远程仓库")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("git-repo-url"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 例如 git remote add origin https://github.com/xxxxxx # 是远程仓库的名称，通常为 origin")]),a._v("\n")])])]),t("ul",[t("li",[a._v("如果你想关联多个远程仓库")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("another-git-repo-url"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 例如 git remote add coding https://coding.net/xxxxxx")]),a._v("\n")])])]),t("ul",[t("li",[a._v("忘了关联了哪些仓库或者地址")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# origin https://github.com/gzdaijie/koa-react-server-render-blog.git (fetch)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# origin https://github.com/gzdaijie/koa-react-server-render-blog.git (push)")]),a._v("\n")])])]),t("ul",[t("li",[a._v("如果远程有仓库，你需要clone到本地")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("git-repo-url"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 关联的远程仓库将被命名为origin，这是默认的。")]),a._v("\n")])])]),t("ul",[t("li",[a._v("如果你想把别人仓库的地址改为自己的")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote set-url origin "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your-git-url"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h4",{attrs:{id:"切换分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E5%88%87%E6%8D%A2%E5%88%86%E6%94%AF"}},[a._v("#")]),a._v(" 切换分支")]),a._v(" "),t("blockquote",[t("p",[a._v("新建仓库后，默认生成了master分支")])]),a._v(" "),t("ul",[t("li",[a._v("如果你想新建分支并切换")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("new-branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 例如 git checkout -b dev")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果仅新建，不切换，则去掉参数 -b")]),a._v("\n")])])]),t("ul",[t("li",[a._v("看看当前有哪些分支")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# * dev")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   master # 标*号的代表当前所在的分支")]),a._v("\n")])])]),t("ul",[t("li",[a._v("看看当前本地&远程有哪些分支")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# * dev")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   master")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   remotes/origin/master")]),a._v("\n")])])]),t("ul",[t("li",[a._v("切换到现有的分支")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout master\n")])])]),t("ul",[t("li",[a._v("你想把dev分支合并到master分支")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 例如 git merge dev")]),a._v("\n")])])]),t("ul",[t("li",[a._v("你想把本地master分支推送到远程去")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin master\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 你可以使用git push -u origin master将本地分支与远程分支关联，之后仅需要使用git push即可。")]),a._v("\n")])])]),t("ul",[t("li",[a._v("远程分支被别人更新了，你需要更新代码")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull origin "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 之前如果push时使用过-u，那么就可以省略为git pull")]),a._v("\n")])])]),t("ul",[t("li",[a._v("本地有修改，能不能先git pull")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 工作区修改暂存")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 更新分支")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash pop "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 暂存修改恢复到工作区")]),a._v("\n")])])]),t("h4",{attrs:{id:"撤销操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#撤销操作"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E6%92%A4%E9%94%80%E6%93%8D%E4%BD%9C"}},[a._v("#")]),a._v(" 撤销操作")]),a._v(" "),t("ul",[t("li",[a._v("恢复暂存区文件到工作区")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("ul",[t("li",[a._v("恢复暂存区的所有文件到工作区")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("ul",[t("li",[a._v("重置暂存区的某文件，与上一次commit保持一致，但工作区不变")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("ul",[t("li",[a._v("重置暂存区与工作区，与上一次commit保持一致")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果是回退版本(commit)，那么file，变成commit的hash码就好了。")]),a._v("\n")])])]),t("ul",[t("li",[a._v("去掉某个commit")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" revert "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 实质是新建了一个与原来完全相反的commit，抵消了原来commit的效果")]),a._v("\n")])])]),t("ul",[t("li",[a._v("reset回退错误恢复")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reflog "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看最近操作记录")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v(" HEAD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#恢复到前五笔操作")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull origin backend-log "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#再次拉取代码")]),a._v("\n")])])]),t("h4",{attrs:{id:"版本回退与前进"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本回退与前进"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80%E4%B8%8E%E5%89%8D%E8%BF%9B"}},[a._v("#")]),a._v(" 版本回退与前进")]),a._v(" "),t("ul",[t("li",[a._v("查看历史版本")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log\n")])])]),t("ul",[t("li",[a._v("你可能觉得这样的log不好看，试试这个")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--graph")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--decorate")]),a._v(" --abbrev-commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--all")]),a._v("\n")])])]),t("ul",[t("li",[a._v("检出到任意版本")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout a5d88ea\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# hash码很长，通常6-7位就够了")]),a._v("\n")])])]),t("ul",[t("li",[a._v("远程仓库的版本很新，但是你还是想用老版本覆盖")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin master "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--force")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者 git push -f origin master")]),a._v("\n")])])]),t("ul",[t("li",[a._v("觉得commit太多了? 多个commit合并为1个")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rebase "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" HEAD~4\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这个命令，将最近4个commit合并为1个，HEAD代表当前版本。将进入VIM界面，你可以修改提交信息。推送到远程分支的commit，不建议这样做，多人合作时，通常不建议修改历史。")]),a._v("\n")])])]),t("ul",[t("li",[a._v("想回退到某一个版本")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 例如 git reset --hard a3hd73r")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# --hard代表丢弃工作区的修改，让工作区与版本代码一模一样，与之对应，--soft参数代表保留工作区的修改。")]),a._v("\n")])])]),t("ul",[t("li",[a._v("想回退到上一个版本，有没有简便方法?")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v(" HEAD^\n")])])]),t("ul",[t("li",[a._v("回退到上上个版本呢?")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hard")]),a._v(" HEAD^^\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# HEAD^^可以换作具体版本hash值。")]),a._v("\n")])])]),t("ul",[t("li",[a._v("回退错了，能不能前进呀")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reflog\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这个命令保留了最近执行的操作及所处的版本，每条命令前的hash值，则是对应版本的hash值。使用上述的git checkout 或者 git reset命令 则可以检出或回退到对应版本。")]),a._v("\n")])])]),t("ul",[t("li",[a._v("刚才commit信息写错了，可以修改吗")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--amend")]),a._v("\n")])])]),t("ul",[t("li",[a._v("看看当前状态吧")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" status\n")])])]),t("h4",{attrs:{id:"配置属于你的git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置属于你的git"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84git"}},[a._v("#")]),a._v(" 配置属于你的Git")]),a._v(" "),t("ul",[t("li",[a._v("看看当前的配置")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--list")]),a._v("\n")])])]),t("ul",[t("li",[a._v("估计你需要配置你的名字")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" user.name "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<name>"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  --global为可选参数，该参数表示配置全局信息")]),a._v("\n")])])]),t("ul",[t("li",[a._v("希望别人看到你的commit可以联系到你")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" user.email "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<email address>"')]),a._v("\n")])])]),t("ul",[t("li",[a._v("有些命令很长，能不能简化一下")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias.logg "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"log --graph --decorate --abbrev-commit --all"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 之后就可以开心地使用 git log了")]),a._v("\n")])])]),t("h2",{attrs:{id:"gitignore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gitignore"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#gitignore"}},[a._v("#")]),a._v(" gitignore")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.jianshu.com/p/74bd0ceb6182",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git 忽略提交 .gitignore在新窗口打开"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"使用gource生成版本记录视频"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用gource生成版本记录视频"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#%E4%BD%BF%E7%94%A8gource%E7%94%9F%E6%88%90%E7%89%88%E6%9C%AC%E8%AE%B0%E5%BD%95%E8%A7%86%E9%A2%91"}},[a._v("#")]),a._v(" 使用Gource生成版本记录视频")]),a._v(" "),t("ul",[t("li",[a._v("工具下载https://www.cr173.com/soft/761328.html")]),a._v(" "),t("li",[a._v("官网 https://github.com/acaudwell/Gource")]),a._v(" "),t("li",[a._v("官网 - 转成视频 https://github.com/acaudwell/Gource/wiki/Videos")]),a._v(" "),t("li",[a._v("视频预览 http://www.365yg.com/i6595151386688619022/#mid=1592562064545805")])]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("著作权归@pdai所有 原文链接：https://pdai.tech/md/devops/tool/tool-git.html")])])}),[],!1,null,null,null);t.default=r.exports}}]);