(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{431:function(t,e,s){"use strict";s.r(e);var a=s(14),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"linux-ab压力测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-ab压力测试"}},[t._v("#")]),t._v(" Linux - ab压力测试")]),t._v(" "),e("blockquote",[e("p",[t._v("ab是apachebench命令的缩写, apache自带的压力测试工具。ab非常实用，它不仅可以对apache服务器进行网站访问压力测试，也可以对或其它类型的服务器进行压力测试。")])]),t._v(" "),e("ul",[e("li",[t._v("Linux - ab压力测试\n"),e("ul",[e("li",[e("a",{attrs:{href:"#ab%E7%9A%84%E7%AE%80%E4%BB%8B"}},[t._v("ab的简介")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#ab%E7%9A%84%E5%8E%9F%E7%90%86"}},[t._v("ab的原理")])]),t._v(" "),e("li",[t._v("ab的安装\n"),e("ul",[e("li",[e("a",{attrs:{href:"#ab%E7%9A%84%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E"}},[t._v("ab的参数说明")])])])]),t._v(" "),e("li",[t._v("性能指标\n"),e("ul",[e("li",[e("a",{attrs:{href:"#%E5%90%9E%E5%90%90%E9%87%8Frequests-per-second"}},[t._v("吞吐量（Requests per second）")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E5%B9%B6%E5%8F%91%E8%BF%9E%E6%8E%A5%E6%95%B0the-number-of-concurrent-connections"}},[t._v("并发连接数（The number of concurrent connections）")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E5%B9%B6%E5%8F%91%E7%94%A8%E6%88%B7%E6%95%B0concurrency-level"}},[t._v("并发用户数（Concurrency Level）")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E7%94%A8%E6%88%B7%E5%B9%B3%E5%9D%87%E8%AF%B7%E6%B1%82%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4time-per-request"}},[t._v("用户平均请求等待时间（Time per request）")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B3%E5%9D%87%E8%AF%B7%E6%B1%82%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4time-per-requestacross-all-concurrent-requests"}},[t._v("服务器平均请求等待时间（Time per request:across all concurrent requests）")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#ab%E7%9A%84%E5%BA%94%E7%94%A8"}},[t._v("ab的应用")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E6%96%87%E7%AB%A0%E6%9D%A5%E6%BA%90"}},[t._v("文章来源")])])])])]),t._v(" "),e("h2",{attrs:{id:"ab的简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ab的简介"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#ab%E7%9A%84%E7%AE%80%E4%BB%8B"}},[t._v("#")]),t._v(" ab的简介")]),t._v(" "),e("p",[t._v("ab是apachebench命令的缩写。")]),t._v(" "),e("p",[t._v("ab是apache自带的压力测试工具。ab非常实用，它不仅可以对apache服务器进行网站访问压力测试，也可以对或其它类型的服务器进行压力测试。比如nginx、tomcat、IIS等")]),t._v(" "),e("h2",{attrs:{id:"ab的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ab的原理"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#ab%E7%9A%84%E5%8E%9F%E7%90%86"}},[t._v("#")]),t._v(" ab的原理")]),t._v(" "),e("p",[t._v("ab的原理：ab命令会创建多个并发访问线程，模拟多个访问者同时对某一URL地址进行访问。它的测试目标是基于URL的，因此，它既可以用来测试apache的负载压力，也可以测试nginx、lighthttp、tomcat、IIS等其它Web服务器的压力。")]),t._v(" "),e("p",[t._v("ab命令对发出负载的计算机要求很低，它既不会占用很高CPU，也不会占用很多内存。但却会给目标服务器造成巨大的负载，其原理类似CC攻击。自己测试使用也需要注意，否则一次上太多的负载。可能造成目标服务器资源耗完，严重时甚至导致死机。")]),t._v(" "),e("h2",{attrs:{id:"ab的安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ab的安装"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#ab%E7%9A%84%E5%AE%89%E8%A3%85"}},[t._v("#")]),t._v(" ab的安装")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("yum "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("y install httpd"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("tools\n")])])]),e("p",[t._v("测试安装是否成功：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@vic html"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ab -V")]),t._v("\nThis is ApacheBench, Version "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Revision")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("655654")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nCopyright "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1996")]),t._v(" Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n")])])]),e("h3",{attrs:{id:"ab的参数说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ab的参数说明"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#ab%E7%9A%84%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E"}},[t._v("#")]),t._v(" ab的参数说明")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@vic html"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ab --help")]),t._v("\nab: wrong number of arguments\nUsage: ab "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("://"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("hostname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("/path\nOptions are:\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" requests     Number of requests to perform\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" concurrency  Number of multiple requests to "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" timelimit    Seconds to max. "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" responses\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" windowsize   Size of TCP send/receive buffer, "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" bytes\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" postfile     File containing data to POST. Remember also to "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-T")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" putfile      File containing data to PUT. Remember also to "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-T")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-T")]),t._v(" content-type Content-type header "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" POSTing, eg.\n                    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/x-www-form-urlencoded'")]),t._v("\n                    Default is "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/plain'")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" verbosity    How much troubleshooting info to print\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-w")]),t._v("              Print out results "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" HTML tables\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v("              Use HEAD instead of GET\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-x")]),t._v(" attributes   String to insert as table attributes\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" attributes   String to insert as "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tr")]),t._v(" attributes\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-z")]),t._v(" attributes   String to insert as td or th attributes\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-C")]),t._v(" attribute    Add cookie, eg. "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Apache=1234. (repeatable)\n    -H attribute    Add Arbitrary header line, eg. '")]),t._v("Accept-Encoding: "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("gzip")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n                    Inserted after all normal header lines. (repeatable)\n    -A attribute    Add Basic WWW Authentication, the attributes\n                    are a colon separated username and password.\n    -P attribute    Add Basic Proxy Authentication, the attributes\n                    are a colon separated username and password.\n    -X proxy:port   Proxyserver and port number to use\n    -V              Print version number and exit\n    -k              Use HTTP KeepAlive feature\n    -d              Do not show percentiles served table.\n    -S              Do not show confidence estimators and warnings.\n    -g filename     Output collected data to gnuplot format file.\n    -e filename     Output CSV file with percentages served\n    -r              Don'")]),t._v("t "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" on socket receive errors.\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-h")]),t._v("              Display usage information "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Z")]),t._v(" ciphersuite  Specify SSL/TLS cipher suite "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("See openssl ciphers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" protocol     Specify SSL/TLS protocol "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SSL2, SSL3, TLS1, or ALL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("详情说明：")]),t._v(" "),e("p",[t._v("-n在测试会话中所执行的请求个数。默认时，仅执行一个请求。请求的总数量")]),t._v(" "),e("p",[t._v("-c一次产生的请求个数。默认是一次一个。请求的用户量")]),t._v(" "),e("p",[t._v("-t测试所进行的最大秒数。其内部隐含值是-n 50000，它可以使对服务器的测试限制在一个固定的总时间以内。默认时，没有时间限制。")]),t._v(" "),e("p",[t._v("-V显示版本号并退出。")]),t._v(" "),e("h2",{attrs:{id:"性能指标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能指标"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87"}},[t._v("#")]),t._v(" 性能指标")]),t._v(" "),e("h3",{attrs:{id:"吞吐量-requests-per-second"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#吞吐量-requests-per-second"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#%E5%90%9E%E5%90%90%E9%87%8F-requests-per-second"}},[t._v("#")]),t._v(" 吞吐量（Requests per second）")]),t._v(" "),e("p",[t._v("服务器并发处理能力的量化描述，单位是reqs/s，指的是在某个并发用户数下单位时间内处理的请求数。某个并发用户数下单位时间内能处理的最大请求数，称之为最大吞吐率。 记住：吞吐率是基于并发用户数的。这句话代表了两个含义：")]),t._v(" "),e("ul",[e("li",[t._v("吞吐率和并发用户数相关")]),t._v(" "),e("li",[t._v("不同的并发用户数下，吞吐率一般是不同的")])]),t._v(" "),e("p",[t._v("计算公式：总请求数/处理完成这些请求数所花费的时间，即")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("Request per "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("second")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Complete requests/Time taken "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" tests\n")])])]),e("p",[t._v("必须要说明的是，这个数值表示当前机器的整体性能，值越大越好。")]),t._v(" "),e("h3",{attrs:{id:"并发连接数-the-number-of-concurrent-connections"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#并发连接数-the-number-of-concurrent-connections"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#%E5%B9%B6%E5%8F%91%E8%BF%9E%E6%8E%A5%E6%95%B0-the-number-of-concurrent-connections"}},[t._v("#")]),t._v(" 并发连接数（The number of concurrent connections）")]),t._v(" "),e("p",[t._v("并发连接数指的是某个时刻服务器所接受的请求数目，简单的讲，就是一个会话。")]),t._v(" "),e("h3",{attrs:{id:"并发用户数-concurrency-level"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#并发用户数-concurrency-level"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#%E5%B9%B6%E5%8F%91%E7%94%A8%E6%88%B7%E6%95%B0-concurrency-level"}},[t._v("#")]),t._v(" 并发用户数（Concurrency Level）")]),t._v(" "),e("p",[t._v("要注意区分这个概念和并发连接数之间的区别，一个用户可能同时会产生多个会话，也即连接数。在HTTP/1.1下，IE7支持两个并发连接，IE8支持6个并发连接，FireFox3支持4个并发连接，所以相应的，我们的并发用户数就得除以这个基数。")]),t._v(" "),e("h3",{attrs:{id:"用户平均请求等待时间-time-per-request"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户平均请求等待时间-time-per-request"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#%E7%94%A8%E6%88%B7%E5%B9%B3%E5%9D%87%E8%AF%B7%E6%B1%82%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4-time-per-request"}},[t._v("#")]),t._v(" 用户平均请求等待时间（Time per request）")]),t._v(" "),e("p",[t._v("计算公式：处理完成所有请求数所花费的时间/（总请求数/并发用户数），即：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("Time per "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("request")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Time taken "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" tests/（Complete requests/Concurrency Level）\n")])])]),e("h3",{attrs:{id:"服务器平均请求等待时间-time-per-request-across-all-concurrent-requests"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器平均请求等待时间-time-per-request-across-all-concurrent-requests"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B3%E5%9D%87%E8%AF%B7%E6%B1%82%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4-time-per-request-across-all-concurrent-requests"}},[t._v("#")]),t._v(" 服务器平均请求等待时间（Time per request:across all concurrent requests）")]),t._v(" "),e("p",[t._v("计算公式：处理完成所有请求数所花费的时间/总请求数，即：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("Time taken for/testsComplete requests\n")])])]),e("p",[t._v("可以看到，它是吞吐率的倒数。")]),t._v(" "),e("p",[t._v("同时，它也等于用户平均请求等待时间/并发用户数，即Time per request/Concurrency Level")]),t._v(" "),e("h2",{attrs:{id:"ab的应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ab的应用"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#ab%E7%9A%84%E5%BA%94%E7%94%A8"}},[t._v("#")]),t._v(" ab的应用")]),t._v(" "),e("p",[t._v("ab的命令参数比较多，我们经常使用的是-c和-n参数。")]),t._v(" "),e("p",[e("code",[t._v("ab -c 10 -n 100 http://www.myvick.cn/index.php")]),t._v("：同时处理100个请求并运行10次index.php")]),t._v(" "),e("ul",[e("li",[t._v("-c10表示并发用户数为10")]),t._v(" "),e("li",[t._v("-n100表示请求总数为100")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@vic html"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ab -c 10 -n 100 http://www.myvick.cn/index.php")]),t._v("\nThis is ApacheBench, Version "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Revision")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("655654")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nCopyright "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1996")]),t._v(" Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking www.myvick.cn "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("be patient"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".done\n\n\nServer Software:        nginx/1.13.6   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#测试服务器的名字")]),t._v("\nServer Hostname:        www.myvick.cn  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#请求的URL主机名")]),t._v("\nServer Port:            "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("             "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#web服务器监听的端口")]),t._v("\n\nDocument Path:          /index.php　　  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#请求的URL中的根绝对路径，通过该文件的后缀名，我们一般可以了解该请求的类型")]),t._v("\nDocument Length:        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("799")]),t._v(" bytes       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#HTTP响应数据的正文长度")]),t._v("\n\nConcurrency Level:      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("　　　　　　　　"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 并发用户数，这是我们设置的参数之一")]),t._v("\nTime taken "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" tests:   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.668")]),t._v(" seconds   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#所有这些请求被处理完成所花费的总时间 单位秒")]),t._v("\nComplete requests:      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" 　　　　　　  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 总请求数量，这是我们设置的参数之一")]),t._v("\nFailed requests:        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("　　　　　　　　  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示失败的请求数量，这里的失败是指请求在连接服务器、发送数据等环节发生异常，以及无响应后超时的情况")]),t._v("\nWrite errors:           "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nTotal transferred:      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("96200")]),t._v(" bytes　　　 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#所有请求的响应数据长度总和。包括每个HTTP响应数据的头信息和正文数据的长度")]),t._v("\nHTML transferred:       "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("79900")]),t._v(" bytes　　　　"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有请求的响应数据中正文数据的总和，也就是减去了Total transferred中HTTP响应数据中的头信息的长度")]),t._v("\nRequests per second:    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("149.71")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#/sec] (mean) #吞吐率，计算公式：Complete requests/Time taken for tests  总请求数/处理完成这些请求数所花费的时间")]),t._v("\nTime per request:       "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("66.797")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ms"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用户平均请求等待时间，计算公式：Time token for tests/（Complete requests/Concurrency Level）。处理完成所有请求数所花费的时间/（总请求数/并发用户数）")]),t._v("\nTime per request:       "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.680")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ms"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean, across all concurrent requests"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#服务器平均请求等待时间，计算公式：Time taken for tests/Complete requests，正好是吞吐率的倒数。也可以这么统计：Time per request/Concurrency Level")]),t._v("\nTransfer rate:          "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("140.64")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Kbytes/sec"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" received  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#表示这些请求在单位时间内从服务器获取的数据长度，计算公式：Total trnasferred/ Time taken for tests，这个统计很好的说明服务器的处理能力达到极限时，其出口宽带的需求量。")]),t._v("\n\nConnection Times "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              min  mean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("+/-sd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" median   max\nConnect:        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("       "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\nProcessing:     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("81.3")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("615")]),t._v("\nWaiting:        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("81.3")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("615")]),t._v("\nTotal:          "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("81.3")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("618")]),t._v("\n\nPercentage of the requests served within a certain "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("%      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),t._v("%      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),t._v("%      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("%      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("%     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),t._v("%    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("209")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),t._v("%    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("209")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("%    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("618")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("%    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("618")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("longest request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Percentage of requests served within a certain time（ms）这部分数据用于描述每个请求处理时间的分布情况，比如以上测试，80%的请求处理时间都不超过7ms，这个处理时间是指前面的Time per request，即对于单个用户而言，平均每个请求的处理时间")]),t._v("\n")])])]),e("h2",{attrs:{id:"文章来源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文章来源"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"#%E6%96%87%E7%AB%A0%E6%9D%A5%E6%BA%90"}},[t._v("#")]),t._v(" 文章来源")]),t._v(" "),e("ul",[e("li",[t._v("本文转载自 https://www.cnblogs.com/myvic/p/7703973.html")]),t._v(" "),e("li",[t._v("作者：myvic")])]),t._v(" "),e("p",[t._v("参考资料：")]),t._v(" "),e("p",[t._v("http://www.jb51.net/article/59469.htm")]),t._v(" "),e("p",[t._v("http://blog.csdn.net/caotianyin/article/details/49253055")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("著作权归@pdai所有 原文链接：https://pdai.tech/md/devops/linux/linux-ab-test.html")])])}),[],!1,null,null,null);e.default=r.exports}}]);